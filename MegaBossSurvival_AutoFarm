-- Ultimate Admin Round Godmode with Failsafes, Idempotency, and Webhook Prompt
-- Kinda.

-- CONFIG --
-- (No hardâ€‘coded webhook here; the GUI will collect it)
local webhookUrl

-- GLOBAL FLAG TO PREVENT DOUBLEâ€‘EXECUTION
_G._GodmodeScriptLoaded = nil
task.wait(0.1)

-- SERVICES
local Players      = game:GetService("Players")
local RunService   = game:GetService("RunService")
local UserInput    = game:GetService("UserInputService")
local VirtualUser  = game:GetService("VirtualUser")
local ReplicatedRS = game:GetService("ReplicatedStorage").Events.Game
local HttpService  = game:GetService("HttpService")

-- LOCAL REFERENCES
local player       = Players.LocalPlayer
local guiName      = "GodmodeToggleGui"
local promptName   = "WebhookPromptGui"
local buttonName   = "ToggleButton"
local partName     = "GodmodeAnchorPart"
local globalFlag   = "_GodmodeScriptLoaded"
local heartbeatConn

-- PREVENT DOUBLEâ€‘EXECUTION
if _G[globalFlag] then return end
_G[globalFlag] = true

-- FUNCTION: PROMPT FOR WEBHOOK URL
local function promptForWebhook()
    local promptGui = Instance.new("ScreenGui")
    promptGui.Name   = promptName
    promptGui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame")
    frame.Size     = UDim2.new(0, 300, 0, 140)
    frame.Position = UDim2.new(0.5, -150, 0.5, -70)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel  = 0
    frame.Parent   = promptGui

    local label = Instance.new("TextLabel")
    label.Text       = "Enter Discord Webhook URL:"
    label.TextColor3 = Color3.new(1,1,1)
    label.BackgroundTransparency = 1
    label.Size       = UDim2.new(1, -20, 0, 30)
    label.Position   = UDim2.new(0, 10, 0, 10)
    label.Parent     = frame

    local textBox = Instance.new("TextBox")
    textBox.PlaceholderText = "https://discord.com/api/..."
    textBox.ClearTextOnFocus = true
    textBox.TextColor3      = Color3.new(0,0,0)
    textBox.BackgroundColor3 = Color3.new(1,1,1)
    textBox.Size         = UDim2.new(1, -20, 0, 30)
    textBox.Position     = UDim2.new(0, 10, 0, 50)
    textBox.Parent       = frame
    textBox:CaptureFocus()

    local enterBtn = Instance.new("TextButton")
    enterBtn.Text       = "Enter"
    enterBtn.TextColor3 = Color3.new(1,1,1)
    enterBtn.BackgroundColor3 = Color3.fromRGB(50, 205, 50)
    enterBtn.Size       = UDim2.new(0.5, -15, 0, 30)
    enterBtn.Position   = UDim2.new(0, 10, 1, -40)
    enterBtn.Parent     = frame

    local skipBtn = Instance.new("TextButton")
    skipBtn.Text        = "Skip"
    skipBtn.TextColor3  = Color3.new(1,1,1)
    skipBtn.BackgroundColor3 = Color3.fromRGB(205, 50, 50)
    skipBtn.Size        = UDim2.new(0.5, -15, 0, 30)
    skipBtn.Position    = UDim2.new(0.5, 5, 1, -40)
    skipBtn.Parent      = frame

    enterBtn.Activated:Connect(function()
        webhookUrl = textBox.Text ~= "" and textBox.Text or nil
        promptGui:Destroy()
    end)
    skipBtn.Activated:Connect(function()
        webhookUrl = nil
        promptGui:Destroy()
    end)
end

-- SHOW PROMPT AT SCRIPT START --
promptForWebhook()

-- CLEANUP ANY EXISTING GUI OR PARTS --
local existingGui = player:FindFirstChild("PlayerGui") and player.PlayerGui:FindFirstChild(guiName)
if existingGui then existingGui:Destroy() end
local oldPart = workspace:FindFirstChild(partName)
if oldPart then oldPart:Destroy() end
if workspace:FindFirstChild("Barrier") then workspace.Barrier:Destroy() end

-- CREATE TELEPORT ANCHOR PART
local part = Instance.new("Part")
part.Name         = partName
part.Parent       = workspace
part.Size         = Vector3.new(50, 50, 50)
part.CFrame       = CFrame.new(382, 640, -880)
part.Anchored     = true
part.CanCollide   = true
part.Transparency = 1

-- CREATE GODMODE TOGGLE GUI
local gui = Instance.new("ScreenGui")
gui.Name   = guiName
gui.Parent = player:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Name             = buttonName
toggleButton.Parent           = gui
toggleButton.Text             = "Godmode: ON"
toggleButton.Size             = UDim2.new(0, 140, 0, 40)
toggleButton.Position         = UDim2.new(0, 20, 0, 20)
toggleButton.BackgroundColor3 = Color3.fromRGB(50, 255, 100)
toggleButton.TextColor3       = Color3.new(0, 0, 0)
toggleButton.AutoButtonColor  = false
toggleButton.Active           = true

-- MAKE THE BUTTON DRAGGABLE
local dragging, dragInput, dragStart, startPos
local function updateGuiPosition(input)
    local delta = input.Position - dragStart
    toggleButton.Position = UDim2.new(
        startPos.X.Scale,
        startPos.X.Offset + delta.X,
        startPos.Y.Scale,
        startPos.Y.Offset + delta.Y
    )
end

toggleButton.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging  = true
        dragStart = input.Position
        startPos  = toggleButton.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
toggleButton.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInput.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        updateGuiPosition(input)
    end
end)

-- GODMODE TOGGLE LOGIC
local godmodeEnabled = true
toggleButton.MouseButton1Click:Connect(function()
    godmodeEnabled = not godmodeEnabled
    toggleButton.Text = "Godmode: " .. (godmodeEnabled and "ON" or "OFF")
    toggleButton.BackgroundColor3 = godmodeEnabled
        and Color3.fromRGB(50, 255, 100)
        or Color3.fromRGB(200, 50, 50)
end)

-- ANTIâ€‘IDLE
player.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- START OR RESTART THE GODMODE LOOP
local function startGodmodeLoop()
    if heartbeatConn then
        heartbeatConn:Disconnect()
        heartbeatConn = nil
    end
    heartbeatConn = RunService.Heartbeat:Connect(function()
        if godmodeEnabled and player.Character 
           and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = part.CFrame
            ReplicatedRS:FireServer("BossSkip", "Yes")
        end
    end)
end
startGodmodeLoop()

-- FUNCTION TO SEND DEATH WEBHOOK
local function sendDeathWebhook(playerName)
    if not webhookUrl then return end
    local payload = {
        content  = playerName .. " has met their doom! ðŸ’€",
        username = "GameNotifier"
    }
    local data = HttpService:JSONEncode(payload)
    HttpService:PostAsync(webhookUrl, data, Enum.HttpContentType.ApplicationJson)
end

-- ON CHARACTER SPAWN, SET UP DEATH HANDLER
Players.LocalPlayer.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    startGodmodeLoop()
    humanoid.Died:Connect(function()
        sendDeathWebhook(player.Name)
    end)
end)
